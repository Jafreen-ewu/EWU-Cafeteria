SET FOREIGN_KEY_CHECKS=0; DROP TABLE IF EXISTS orders; DROP TABLE IF EXISTS menu; DROP TABLE IF EXISTS users; SET FOREIGN_KEY_CHECKS=1; CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, role ENUM('admin','staff','student') NOT NULL, wallet DECIMAL(10,2) DEFAULT 0.00); INSERT INTO users (username,password,role,wallet) VALUES ('admin1',MD5('admin123'),'admin',0.00),('staff1',MD5('staff123'),'staff',200.00),('student1',MD5('student123'),'student',500.00); CREATE TABLE menu (id INT AUTO_INCREMENT PRIMARY KEY, item_name VARCHAR(150) NOT NULL, price DECIMAL(10,2) NOT NULL, stock INT NOT NULL DEFAULT 0); INSERT INTO menu (item_name,price,stock) VALUES ('Chicken Biryani',150.00,40),('Beef Tehari',180.00,30),('Coffee',80.00,100),('Samosa',20.00,300); CREATE TABLE orders (id INT AUTO_INCREMENT PRIMARY KEY, user_id INT NOT NULL, menu_id INT NOT NULL, qty INT NOT NULL, total DECIMAL(10,2) NOT NULL, payment_method ENUM('WALLET','CASH') DEFAULT 'CASH', status ENUM('PENDING','COMPLETED') DEFAULT 'PENDING', created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (menu_id) REFERENCES menu(id) ON DELETE CASCADE); INSERT INTO orders (user_id,menu_id,qty,total) VALUES (3,1,2,300.00),(3,4,1,20.00),(2,2,1,180.00);